# Azure DevOps pipeline to build, check source codes and run tests.
#
# To make Danger JS run on a pull request you need to add the following pipeline
# variable and set it with a GitHub access token (scope public_repo); otherwise
# set its value to 'skip' without marking it secret:
# - DANGER_GITHUB_API_TOKEN
#

variables:
  NODE_VERSION: '12.19.1'
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - pagopa-api-config-fe

# Execute agents (jobs) on latest Ubuntu version.
# To change OS for a specific, override "pool" attribute inside the job definition
pool:
  vmImage: 'ubuntu-latest'

stages:
  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis configuration'
    inputs:
      SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
      organization: '$(SONARCLOUD_ORG)'
      scannerMode: Other
      extraProperties: |
        sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
        sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
#        sonar.language=js,jsx,ts,tsx
#          sonar.coverage.exclusions=**/config/*,**/*Mock*,**/model/*,**/entity/*
#        sonar.javascript.file.suffixes=.js,.jsx
#        sonar.javascript.lcov.reportPaths=./coverage/lcov.info
#        sonar.typescript.file.suffixes=.ts,.tsx
#        sonar.sources=.
#        sonar.exclusions=**/__tests__/*.tsx , **/coverage/**/*.js,**/setupTests.ts,**/babel.config.js,**/index.js, **/metro.config.js, **/App.tsx
#        sonar.tests=./__tests__
#        sonar.testExecutionReportPaths=./test-report.xml
#        sonar.sourceEncoding=UTF-8

  - stage: Build
    dependsOn: []
    jobs:
      - job: make_build
#        pool:
#          # As we deploy on Windows machines, we use Windows to build
#          vmImage: 'windows-2019'
        steps:
          - template: azure-templates/setup-project.yml
          - script: yarn build
            displayName: 'Build'

  - stage: Static_analysis
    dependsOn: []
    jobs:
      - job: lint
        steps:
          - template: azure-templates/setup-project.yml
          - script: yarn lint
            displayName: 'Lint'
#      - job: danger
#        condition:
#          and(
#          succeeded(),
#          ne(variables['DANGER_GITHUB_API_TOKEN'], 'skip')
#          )
#        steps:
#          - template: azure-templates/setup-project.yml
#
#          - bash: yarn danger ci
#            env:
#              DANGER_GITHUB_API_TOKEN: '$(DANGER_GITHUB_API_TOKEN)'
#            displayName: 'Danger CI'

  # B) Run unit tests if there is a push or pull request on any branch.
  - stage: Test
    dependsOn: []
    jobs:
      - job: unit_tests
        steps:
          - template: azure-templates/setup-project.yml

#          - script: yarn generate
#            displayName: 'Generate definitions'

#          TODO fix jest configuration
#          - script: yarn test:coverage
#            workingDirectory: pagopa-api-config-fe
#            displayName: 'Unit tests exec'

          - script: yarn test
            displayName: 'Unit tests exec'

#          - bash: bash <(curl -s https://codecov.io/bash)
#            displayName: 'Code coverage'

  - task: SonarCloudPublish@1
    displayName: 'Publish SonarCloud results on build summary'
    inputs:
      pollingTimeoutSec: '300'
